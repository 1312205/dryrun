#!/usr/bin/env ruby

require "atry"
require 'colorize'
require 'tmpdir'
require 'fileutils'
require 'atry/github'
require 'pry'


################## STEPS ##################
# try https://github.com/ppamorim/Dragger
# cd /tmp/
# git clone https://github.com/ppamorim/Dragger.git {timestamp}-Dragger
# cd {timestamp}-Dragger
# check if this is an android projetct (settings.gradle)
# ./gradlew clean installDebug
# ./gradlew openDebug


def is_ANDROID_HOME_defined
  return true
end

# ./gradlew clean installDebug
def clean_install(path)
  Dir.chdir path
  system("./gradlew clean assembleDebug")
  system("./gradlew installDebug")
end

# ./gradlew openDebug

def is_a_valid_android_project(path)
  File.exist?("#{path}/settings.gradle")
end


# ARGUMENTS validation
if ARGV.length != 1
  puts "You need to provide the github URL"
  exit 1
end

if !is_ANDROID_HOME_defined
  #asd
end

url = ARGV[0]


github = Github.new(url)

if !github.is_a_github_url
  puts "#{url.red} is not a valid github url"
  exit 1
end

puts "#########################################################################"

puts "\nLets work this one out: #{url.green}\n\n"

# clone the repository
clonable = github.clonable_url
puts "git clone #{clonable.yellow}.....\n\n"
repository = github.clone

# is a valid android project?
if !is_a_valid_android_project(repository)
  puts "#{url.red} is not a valid android project"
  exit 1
end

clean_install(repository)

puts "\n\n#########################################################################"

